[
    {
        "name": "Format String",
        "alt_names":[
            "_printf",
            "printf",
            ".printf",
            "printk",
            "_printk",
            ".printk",
            "vprintf",
            ".vprintf",
            "_vprintf",
            "scanf",
            ".scanf",
            "_scanf",
            "vscanf",
            ".vscanf",
            "_vscanf",
            "nslog",
            ".nslog",
            "_nslog",
            "wprintf",
            ".wprintf",
            "_wprintf",
            "vwprintf",
            ".vwprintf",
            "_vwprintf",
            "vwscanf",
            ".vwscanf",
            "_vwscanf",
            "vscanf_s",
            ".vscanf_s",
            "_vscanf_s",
            "vwscanf_s",
            ".vwscanf_s",
            "_vwscanf_s",
            "_vscprintf",
            "vscprintf",
            ".vscprintf",
            "_vscprintf_l",
            "vscprintf_l",
            ".vscprintf_l",
            "_vscwprintf",
            "vscwprintf",
            ".vscwprintf",
            "_vscwprintf_l",
            "vscwprintf_l",
            ".vscwprintf_l",
            "_vscprintf_p",
            "vscprintf_p",
            ".vscprintf_p",
            "_vscprintf_p_l",
            "vscprintf_p_l",
            ".vscprintf_p_l",
            "_vscwprintf_p",
            "vscwprintf_p",
            ".vscwprintf_p",
            "_vscwprintf_p_l",
            "vscwprintf_p_l",
            ".vscwprintf_p_l",
            "_vcprintf",
            "vcprintf",
            ".vcprintf",
            "_vcprintf_l",
            "vcprintf_l",
            ".vcprintf_l",
            "_vcwprintf",
            "vcwprintf",
            ".vcwprintf",
            "_vcwprintf_l",
            "vcwprintf_l",
            ".vcwprintf_l",
            "_vcprintf_p",
            "vcprintf_p",
            ".vcprintf_p",
            "_vcprintf_p_l",
            "vcprintf_p_l",
            ".vcprintf_p_l",
            "_vcwprintf_p",
            "vcwprintf_p",
            ".vcwprintf_p",
            "_vcwprintf_p_l",
            "vcwprintf_p_l",
            ".vcwprintf_p_l",
            "_vcwprintf_s",
            "vcwprintf_s",
            ".vcwprintf_s",
            "_vcwprintf_s_l",
            "vcwprintf_s_l",
            ".vcwprintf_s_l",
            "_vprintf_l",
            "vprintf_l",
            ".vprintf_l",
            "_vwprintf_l",
            "vwprintf_l",
            ".vwprintf_l",
            "_vprintf_p",
            "vprintf_p",
            ".vprintf_p",
            "_vprintf_p_l",
            "vprintf_p_l",
            ".vprintf_p_l",
            "_vwprintf_p",
            "vwprintf_p",
            ".vwprintf_p",
            "_vwprintf_p_l",
            "vwprintf_p_l",
            ".vwprintf_p_l",
            "vprintf_s",
            ".vprintf_s",
            "_vprintf_s",
            "_vprintf_s_l",
            "vprintf_s_l",
            ".vprintf_s_l",
            "vwprintf_s",
            ".vwprintf_s",
            "_vwprintf_s",
            "_vwprintf_s_l",
            ".vwprintf_s_l",
            "vwprintf_s_l"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[0].is_constant()",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Format String",
        "alt_names":[
            "wsprintf",
            ".wsprintf",
            "_wsprintf",
            "wsprintfw",
            ".wsprintfw",
            "_wsprintfw",
            "wsprintfa",
            ".wsprintfa",
            "_wsprintfa",
            "fprintf",
            ".fprintf",
            "_fprintf",
            "sprintf",
            ".sprintf",
            "_sprintf",
            "vsprintf",
            ".vsprintf",
            "_vsprintf",
            "vfprintf",
            ".vfprintf",
            "_vfprintf",
            "sscanf",
            ".sscanf",
            "_sscanf",
            "fscanf",
            ".fscanf",
            "_fscanf",
            "vsscanf",
            ".vsscanf",
            "_vsscanf",
            "vfscanf",
            ".vfscanf",
            "_vfscanf",
            "fwprintf",
            ".fwprintf",
            "_fwprintf",
            "vfwprintf",
            ".vfwprintf",
            "_vfwprintf",
            "_vfprintf_l",
            "vfprintf_l",
            ".vfprintf_l",
            "_vfwprintf_l",
            "vfwprintf_l",
            ".vfwprintf_l",
            "_vfprintf_p",
            "asprintf",
            ".asprintf",
            "_asprintf",
            "vfprintf_p",
            ".vfprintf_p",
            "_vfprintf_p_l",
            "vfprintf_p_l",
            ".vfprintf_p_l",
            "_vfwprintf_p",
            "vfwprintf_p",
            ".vfwprintf_p",
            "_vfwprintf_p_l",
            "vfwprintf_p_l",
            ".vfwprintf_p_l",
            "vfprintf_s",
            ".vfprintf_s",
            "_vfprintf_s",
            "_vfprintf_s_l",
            "vfprintf_s_l",
            ".vfprintf_s_l",
            "vfwprintf_s",
            ".vfwprintf_s",
            "_vfwprintf_s",
            "_vfwprintf_s_l",
            "vfwprintf_s_l",
            ".vfwprintf_s_l",
            "vasprintf",
            ".vasprintf",
            "_vasprintf",
            "vfwscanf",
            ".vfwscanf",
            "_vfwscanf",
            "vfscanf_s",
            ".vfscanf_s",
            "_vfscanf_s",
            "vfwscanf_s",
            ".vfwscanf_s",
            "_vfwscanf_s",
            "_vsprintf_l",
            "vsprintf_l",
            ".vsprintf_l",
            "__vswprintf_l",
            "vswprintf",
            ".vswprintf",
            "_vswprintf",
            "vsprintf_s",
            ".vsprintf_s",
            "_vsprintf_s",
            "vswprintf_s",
            ".vswprintf_s",
            "_vswprintf_s",
            "vswscanf",
            ".vswscanf",
            "_vswscanf",
            "vsscanf_s",
            ".vsscanf_s",
            ".vsscanf_s",
            "_vsscanf_s",
            "vswscanf_s",
            ".vswscanf_s",
            "_vswscanf_s",
            "__wprintf_chk",
            "___vprintf_chk",
            "__vwprintf_chk",
            "___printf_chk",
            "__printf_chk",
            "__vprintf_chk"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[1].is_constant()",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Format String",
        "alt_names":[
            "vsnprintf",
            ".vsnprintf",
            "_vsnprintf",
            "snprintf",
            ".snprintf",
            "_snprintf",
            "vswprintf",
            ".vswprintf",
            "_vswprintf",
            "swprintf",
            ".swprintf",
            "_swprintf",
            "_vsnprintf_l",
            "vsnprintf_l",
            ".vsnprintf_l",
            "_vsnwprintf",
            "vsnwprintf",
            ".vsnwprintf",
            "_vsnwprintf_l",
            "vsnwprintf_l",
            ".vsnwprintf_l",
            "_vsnprintf_s",
            "vsnprintf_s",
            ".vsnprintf_s",
            "_vsnwprintf_s",
            "vsnwprintf_s",
            ".vsnwprintf_s",
            "_vswprintf_l",
            "vswprintf_l",
            ".vswprintf_l",
            "_vsprintf_p",
            "vsprintf_p",
            ".vsprintf_p",
            "_vsprintf_p_l",
            "vsprintf_p_l",
            ".vsprintf_p_l",
            "_sprintf_p_l",
            "_vswprintf_p",
            "vswprintf_p",
            ".vswprintf_p",
            "_vswprintf_p_l",
            "vswprintf_p_l",
            ".vswprintf_p_l",
            "vsprintf_s",
            ".vsprintf_s",
            "_vsprintf_s",
            "_vsprintf_s_l",
            "vsprintf_s_l",
            ".vsprintf_s_l",
            "vswprintf_s",
            ".vswprintf_s",
            "_vswprintf_s",
            "_vswprintf_s_l",
            "vswprintf_s_l",
            ".vswprintf_s_l",
            "__asprintf_chk", 
            "__dprintf_chk", 
            "___fprintf_chk", 
            "__fprintf_chk",
            "__fwprintf_chk", 
            "__obstack_vprintf_chk", 
            "__obstack_printf_chk", 
            "__vasprintf_chk",
            "__vdprintf_chk", 
            "___vfprintf_chk", 
            "__vfwprintf_chk",
            "__vfprintf_chk" 
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[2].is_constant()",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Format String",
        "alt_names":[
            "vsnprintf_s",
            ".vsnprintf_s",
            "_vsnprintf_s",
            "_vsnprintf_s_l",
            "vsnprintf_s_l",
            ".vsnprintf_s_l",
            "_vsnwprintf_s",
            "vsnwprintf_s",
            ".vsnwprintf_s",
            "_vsnwprintf_s_l",
            "vsnwprintf_s_l",
            ".vsnwprintf_s_l",
            "___vsprintf_chk", 
            "___sprintf_chk",
            "__sprintf_chk", 
            "__vsprintf_chk" 
            
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[3].is_constant()",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Format String",
        "alt_names":[
            "___snprintf_chk", 
            "__snprintf_chk", 
            "__swprintf_chk", 
            "___vsnprintf_chk", 
            "__vswprintf_chk", 
            "__vsnprintf_chk"
            
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[4].is_constant()",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Format String",
        "alt_names":[
            "objc_msgsend", 
            ".objc_msgsend", 
            "_objc_msgsend"
            
        ],
        "wrappers":false,
        "mark_if":{
            "High":"('appendformat:' in param[1].string_value().lower() and not param[2].is_constant()) or ('stringbyappendingformat:' in param[1].string_value().lower() and not param[2].is_constant()) or ('stringwithformat:' in param[1].string_value().lower() and not param[2].is_constant()) or ('raise:format:' in param[1].string_value().lower() and not param[3].is_constant())",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Buffer Overflow",
        "alt_names":[
            "strcpy",
            ".strcpy",
            "_strcpy",
            "wcscpy",
            ".wcscpy",
            "_wcscpy",
            "_mbscpy",
            "mbscpy",
            ".mbscpy",
            "lstrcpya",
            "_lstrcpya",
            ".lstrcpya",
            "lstrcpyw",
            ".lstrcpyw",
            "_lstrcpyw",
            "strcat",
            ".strcat",
            "_strcat",
            "wcscat",
            ".wcscat",
            "_wcscat",
            "_mbscat",
            "mbscat",
            ".mbscat",
            "lstrcata",
            ".lstrcata",
            "_lstrcata",
            "lstrcatw",
            "_lstrcatw",
            ".lstrcatw"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[1].is_constant()",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Buffer Overflow",
        "alt_names":[
            "strncpy",
            ".strncpy",
            "_strncpy",
            "lstrcpyna",
            "_lstrcpyna",
            ".lstrcpyna",
            "lstrcpynw",
            "_lstrcpynw",
            ".lstrcpynw",
            "strncat",
            ".strncat",
            "_strncat",
            "memcpy",
            ".memcpy",
            "_memcpy",
            "wmemcpy",
            ".wmemcpy",
            "_wmemcpy",
            "memmove",
            ".memmove",
            "_memmove",
            "wmemmove",
            ".wmemmove",
            "_wmemmove"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[2].is_constant()",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Buffer Overflow",
        "alt_names":[
            "strcpy_s",
            ".strcpy_s",
            "_strcpy_s",
            "wcscpy_s",
            ".wcscpy_s",
            "_wcscpy_s",
            "_mbscpy_s",
            "mbscpy_s",
            ".mbscpy_s",
            "_mbscpy_s_l",
            "mbscpy_s_l",
            ".mbscpy_s_l",
            "strcat_s",
            ".strcat_s",
            "_strcat_s",
            "wcscat_s",
            ".wcscat_s",
            "_wcscat_s",
            "_mbscat_s",
            "mbscat_s",
            ".mbscat_s",
            "_mbscat_s_l",
            "mbscat_s_l",
            ".mbscat_s_l"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"False",
            "Medium":"not param[2].is_constant()",
            "Low": "False"
        }
    },
    {
        "name": "Buffer Overflow",
        "alt_names":[
            "gets",
            ".gets",
            "_gets"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"True",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Buffer Overflow",
        "alt_names":[
            "scanf",
            ".scanf",
            "_scanf"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"'%s' in param[0].string_value()",
            "Medium":"False",
            "Low": "True"
        }
    },
    {
        "name": "Buffer Overflow",
        "alt_names":[
            "fscanf",
            ".fscanf",
            "_fscanf",
            "sscanf",
            ".sscanf",
            "_sscanf",
            "sprintf",
            ".sprintf",
            "_sprintf",
            "vsprintf",
            ".vsprintf",
            "_vsprintf"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"'%s' in param[1].string_value()",
            "Medium":"False",
            "Low": "True"
        }
    },
    {
        "name": "Buffer Overflow",
        "alt_names":[
            "memcpy_s",
            ".memcpy_s",
            "_memcpy_s",
            "wmemcpy_s",
            ".wmemcpy_s",
            "_wmemcpy_s",
            "memmove_s",
            ".memmove_s",
            "_memmove_s",
            "wmemmove_s",
            ".wmemmove_s",
            "_wmemmove_s"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"False",
            "Medium":"not param[1].is_constant() and not param[3].is_constant()",
            "Low": "False"
        }
    },
    {
        "name": "Buffer Overflow",
        "alt_names":[
            "snprintf",
            ".snprintf",
            "_snprintf",
            "vsnprintf",
            ".vsnprintf",
            "_vsnprintf"
            
        ],
        "wrappers":false,
        "mark_if":{
            "High":"False",
            "Medium":"not param[1].is_constant() and '%s' in param[2].string_value()",
            "Low": "not param[1].is_constant()"
        }
    },
    {
        "name": "Command Injection",
        "alt_names":[
            "system",
            ".system",
            "_system",
            "_popen",
            "popen",
            ".popen",
            "wpopen",
            ".wpopen",
            "_wpopen",
            "execl",
            ".execl",
            "execlp", 
            ".execlp", 
            "execle", 
            ".execle", 
            "execv",
            ".execv",
            "execvp", 
            ".execvp", 
            "execvpe",
            ".execvpe",
            "_execl", 
            "_execlp",
            "_execle",
            "_execv", 
            "_execvp",
            "_execvpe"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[0].is_constant()",
            "Medium":"False",
            "Low": "False"
        }
    },
    {
        "name": "Unchecked Return Value of *scanf",
        "alt_names":[
            "_fscanf",
            "_scanf",
            "_sscanf",
            "_vfscanf",
            "_vfscanf_s",
            "_vfwscanf",
            "_vfwscanf_s",
            "_vscanf",
            "__isoc99_scanf",
            "_vscanf_s",
            "_vsscanf",
            "_vsscanf_s",
            "_vswscanf",
            "_vswscanf_s",
            "_vwscanf",
            "_vwscanf_s",
            "fscanf",
            ".fscanf",
            "scanf",
            ".scanf",
            "sscanf",
            ".sscanf",
            "vfscanf",
            ".vfscanf",
            "vfscanf_s",
            ".vfscanf_s",
            "vfwscanf",
            ".vfwscanf",
            "vfwscanf_s",
            ".vfwscanf_s",
            "vscanf",
            ".vscanf",
            "vscanf_s",
            ".vscanf_s",
            "vsscanf",
            ".vsscanf",
            "vsscanf_s",
            ".vsscanf_s",
            "vswscanf",
            ".vswscanf",
            "vswscanf_s",
            ".vswscanf_s",
            "vwscanf",
            ".vwscanf",
            "vwscanf_s",
            ".vwscanf_s"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not function_call.return_value_checked()",
            "Medium":"not function_call.return_value_checked(param_count - 2)",
            "Low": "False"
        }
    },
    {
        "name": "Possible Dangling Pointer",
        "alt_names":[
            "free",
            ".free",
            "_free",
            "operator delete"
        ],
        "wrappers":true,
        "mark_if":{
            "High":"False",
            "Medium":"False",
            "Low": "not param[0].set_to_null_after_call()"
        }
    },
    {
        "name": "Possible Null Pointer Dereference",
        "alt_names":[
            "malloc",
            "_malloc",
            ".malloc"
        ],
        "wrappers":false,
        "mark_if":{
            "High":"not param[0].is_constant() and not function_call.return_value_checked()",
            "Medium":"False",
            "Low": "False"
        }
    }
]